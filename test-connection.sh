#!/bin/bash

echo "üß™ Testando conex√£o com Supabase..."
echo ""

# Verifica se o .env existe
if [ ! -f .env ]; then
    echo "‚ùå Arquivo .env n√£o encontrado!"
    echo "Crie um arquivo .env com:"
    echo "VITE_SUPABASE_URL=sua-url"
    echo "VITE_SUPABASE_ANON_KEY=sua-chave"
    exit 1
fi

# Verifica se as vari√°veis est√£o definidas
source .env

if [ -z "$VITE_SUPABASE_URL" ]; then
    echo "‚ùå VITE_SUPABASE_URL n√£o configurada no .env"
    exit 1
fi

if [ -z "$VITE_SUPABASE_ANON_KEY" ]; then
    echo "‚ùå VITE_SUPABASE_ANON_KEY n√£o configurada no .env"
    exit 1
fi

echo "‚úÖ Vari√°veis de ambiente configuradas"
echo "üìç URL: ${VITE_SUPABASE_URL:0:30}..."
echo "üîë Key: ${VITE_SUPABASE_ANON_KEY:0:30}..."
echo ""

# Testa conex√£o com a tabela users
echo "üîç Testando conex√£o com a tabela 'users'..."
RESPONSE=$(curl -s -X GET \
  "${VITE_SUPABASE_URL}/rest/v1/users?select=count" \
  -H "apikey: ${VITE_SUPABASE_ANON_KEY}" \
  -H "Authorization: Bearer ${VITE_SUPABASE_ANON_KEY}" \
  -H "Content-Type: application/json")

if echo "$RESPONSE" | grep -q "error"; then
    echo "‚ùå Erro ao conectar:"
    echo "$RESPONSE" | grep -o '"message":"[^"]*"'
    echo ""
    echo "Poss√≠veis causas:"
    echo "1. Tabela 'users' n√£o existe"
    echo "2. RLS bloqueando acesso"
    echo "3. Credenciais inv√°lidas"
    exit 1
else
    echo "‚úÖ Conex√£o bem-sucedida!"
    echo "üìä Resposta: $RESPONSE"
fi

echo ""
echo "‚úÖ Tudo pronto para usar!"
echo ""
echo "Para testar:"
echo "1. npm run dev"
echo "2. Complete o onboarding"
echo "3. Verifique os dados no Supabase Dashboard"
